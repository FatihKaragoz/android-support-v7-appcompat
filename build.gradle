apply plugin: 'com.android.library'
apply plugin: 'android-maven'

dependencies {
  // local jars will be packaged into the aar
  provided files("./libs/android-support-v4.jar")
  provided files("./libs/android-support-v7-appcompat.jar")
}

android {
  //compileSdkVersion 21
  //buildToolsVersion '21.0.1'

  compileSdkVersion androidTargetSdk()
  buildToolsVersion "$androidBuildVersionTools"

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }
    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }

  lintOptions.abortOnError false
}

eclipse {
  classpath {
    plusConfigurations += [ configurations.compile ]

    //customizing the classes output directory:
    defaultOutputDir = file('bin/classes')

    //noExportConfigurations += [ configurations.providedCompile ]

    containers = ['com.android.ide.eclipse.adt.ANDROID_FRAMEWORK',
		  'com.android.ide.eclipse.adt.LIBRARIES',
		  'com.android.ide.eclipse.adt.DEPENDENCIES']

    file {
      // Manipulation of the classpath XML before merging local
      // and generated copies
      beforeMerged { classpath ->
	// Remove all source entries to avoid overlap
	classpath.entries.removeAll() { c -> c.kind == 'src' }
      }

      // only used to explode jni .so into aar
      whenMerged {
	classpath ->
	  classpath.entries.findAll { entry ->
	    entry.path.contains('support') ||
	    entry.path.contains('ANDROID_FRAMEWORK')
	  }*.exported = false

	  // Direct manipulation of the generated classpath XML
	  withXml {
	    // Since non-default source directories are used
	    // they need to be manually added to the classpath XML
	    def node = it.asNode()
	    // Main source directory and generated code directory
	    node.appendNode('classpathentry kind="src" path="src"')
	    node.appendNode('classpathentry kind="src" path="gen"')
	  }
      }
    }
  }
  project {
    natures = ['com.android.ide.eclipse.adt.AndroidNature',
	       'org.eclipse.jdt.core.javanature']
    buildCommand 'com.android.ide.eclipse.adt.ResourceManagerBuilder'
    buildCommand 'com.android.ide.eclipse.adt.PreCompilerBuilder'
    buildCommand 'com.android.ide.eclipse.adt.ApkBuilder'
  }
}
